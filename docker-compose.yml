version: '3.8'

volumes:
  auth-data:
    driver: local
  problem-data:
    driver: local
  delivery-data:
    driver: local

networks:
  auth-network:
    driver: bridge
  problem-network:
    driver: bridge
  delivery-network:
    driver: bridge

services:
  # Database
  auth-pgsql-database:
    image: postgres:12.4-alpine
    container_name: fastfeet_auth_postgres
    networks:
      - auth-network
    ports:
      - "49165:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fastfeet_auth
      LC_ALL: C
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 7s
      timeout: 5s
    volumes:
      - ./data/auth/pgdata:/var/lib/postgresql/data

  # Cache
  auth-redis-cache:
    image: redis:alpine
    container_name: fastfeet_auth_redis
    networks:
      - auth-network
    ports:
      - "6380:6379"
    command: redis-server --appendonly yes
    volumes:
      - ./data/auth/redis:/data

### PROBLEM
  # Database
  problem-pgsql-database:
    image: postgres:12.4-alpine
    container_name: fastfeet_problem_postgres
    networks:
      - problem-network
    ports:
      - "49166:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fastfeet_problem
      LC_ALL: C
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 7s
      timeout: 5s
    volumes:
      - ./data/problem/pgdata:/var/lib/postgresql/data

  # Cache
  problem-redis-cache:
    image: redis:alpine
    container_name: fastfeet_problem_redis
    networks:
      - problem-network
    ports:
      - "6381:6379"
    command: redis-server --appendonly yes
    volumes:
      - ./data/problem/redis:/data

### DELIVERY
  # Database
  delivery-pgsql-database:
    image: postgres:12.4-alpine
    container_name: fastfeet_delivery_postgres
    networks:
      - delivery-network
    ports:
      - "49167:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fastfeet_delivery
      LC_ALL: C
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 7s
      timeout: 5s
    volumes:
      - ./data/delivery/pgdata:/var/lib/postgresql/data

  # Cache
  delivery-redis-cache:
    image: redis:alpine
    container_name: fastfeet_delivery_redis
    networks:
      - delivery-network
    ports:
      - "6382:6379"
    command: redis-server --appendonly yes
    volumes:
      - ./data/delivery/redis:/data